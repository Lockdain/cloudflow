blueprint {
  streamlets {
    ridesgenerator = taxiride.akka.ingestor.Generator
    merger = taxiride.akka.processor.merger.MessageMerger
    //    processor = taxiride.akka.processor.streamlets.RidesProcessorStreamlet
    //    processor = taxiride.akka.processor.streamlets.optimized.RidesProcessorStreamlet
    //    processor = taxiride.akka.processor.streamlets.optimized.persistent.RidesProcessorStreamlet
    processor = taxiride.akka.processor.streamlets.persistent.RidesProcessorStreamlet
    logger = taxiride.akka.logger.FarePerRideLogger
  }

  topics {
    rides-proto {
      producers = [ridesgenerator.rides]
      consumers = [merger.in-taxiride]
    }
    fares-proto {
      producers = [ridesgenerator.fares]
      consumers = [merger.in-taxifare]
    }
    faresorrides-proto {
      producers = [merger.taxirideorfare]
      consumers = [processor.in-taximessage]
    }
    taxifares-proto {
      producers = [processor.out]
      consumers = [logger.in]
    }
  }
}