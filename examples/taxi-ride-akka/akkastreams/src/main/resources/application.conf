akka {
  actor{
    provider = "cluster"
    serialization-bindings {
      "taxiride.akka.processor.actors.persistent.CborSerializable" = jackson-cbor
    }
  }
  discovery {
    method = akka-dns
  }
  cluster {
    min-nr-of-members = 1
    log-info = on
    shutdown-after-unsuccessful-join-seed-nodes = 60s
   downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  remote {
    artery {
      transport = tcp
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }
  persistence {
    journal {
      plugin = "jdbc-journal"
      // Enable the line below to automatically start the journal when the actorsystem is started
      // auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      // auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?POSTGRES_HOST}
    database = ridefare
    database = ${?POSTGRES_DATABASE}
    url = "jdbc:postgresql://"${slick.db.host}":5432/"${slick.db.database}"?reWriteBatchedInserts=true"
    user = "postgres"
    user = ${?POSTGRES_USER}
    password = "postgres"
    password = ${?POSTGRES_PASSWORD}
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}